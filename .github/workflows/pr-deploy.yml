# This workflow deploys the current branch to Heroku https://grid-optimizer-pr-xxx.herokuapp.com/

name: Deploy PR @ Heroku 

# Controls when the action will run. 
on:
  pull_request:
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node.js 14.15.1
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.1
      - name: Install node modules
        working-directory: ./src-frontend
        run: yarn install
      - name: Gradle Cache
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: gradle build
      - name: Check bundle
        run: ls ./bundle -l
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-artifact
          path: ./bundle

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
        # Create Github Deployment status
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:pr_id
          repository: ${{ github.repository }}
          pr_id: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: "${{ github.token }}"
          
      - name: Create GitHub deployment status
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          environment: "PR #${{ github.event.pull_request.number }} Review"
          auto_merge: false
        env:
          GITHUB_TOKEN: "${{ github.token }}"
        
        
        # Get latest Artifact
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: server-artifact
          path: ./bundle
      - name: Check bundle
        run: ls ./bundle -l
      
        # Deploy
      - name: Dockerize and Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "grid-optimizer-pr-${{ github.event.pull_request.number }}"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          healthcheck: "https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/api/version"
          delay: 15
          rollbackonhealthcheckfailed: true
          stack: "container"

        # Update status
      - name: Update deployment status (success)
        if: success()
        uses: altinukshini/deployment-status@v1.0.1
        with:
          token: "${{ github.token }}"
          pr: true
          pr_id: ${{ github.event.pull_request.number }}
          target_url: https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/
          environment_url: https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/
          state: "success"
          deployment_id: ${{ fromJson(steps.create_deployment.outputs.data).id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: altinukshini/deployment-status@v1.0.1
        with:
          token: "${{ github.token }}"
          pr: true
          pr_id: ${{ github.event.pull_request.number }}
          target_url: https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/
          environment_url: https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/
          state: "failure"
          deployment_id: ${{ fromJson(steps.create_deployment.outputs.data).id }}
