# This workflow deploys the current branch to Heroku https://grid-optimizer-pr-xxx.herokuapp.com/

name: Deploy PR @ Heroku 

# Controls when the action will run. 
on:
  pull_request:
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8
      - name: Set up Node.js 14.15.1
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.15.1
      - name: node_modules cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install node modules
        working-directory: ./src-frontend
        run: yarn install
      - name: Gradle Cache
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: gradlew build
        env:
          CI: ""
      - name: Check bundle
        run: ls ./bundle -l
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-artifact
          path: ./bundle

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
        # Update status   
      - name: Create GitHub deployment
        uses: bobheadxi/deployments@v0.5.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          logs: "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/checks"
          env: "PR #${{ github.event.pull_request.number }} Review"
          ref: ${{ github.head_ref }}
        
        # Get latest Artifact
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: server-artifact
          path: ./bundle
      - name: Check bundle
        run: ls ./bundle -l
      
        # Deploy
      - name: Dockerize and Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "grid-optimizer-pr-${{ github.event.pull_request.number }}"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          healthcheck: "https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/api/version"
          delay: 15
          rollbackonhealthcheckfailed: true
          stack: "container"

        # Update status
      - name: Update GitHub deployment status
        uses: bobheadxi/deployments@v0.5.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          logs: "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/checks"
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          desc: "Review for PR ${{ github.event.pull_request.number }} @ ${{ github.head_ref }}"
          env_url: "https://grid-optimizer-pr-${{ github.event.pull_request.number }}.herokuapp.com/"
